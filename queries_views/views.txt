-- CREATING VIEWS
-- Isolate the transaction of each card holder 
CREATE VIEW transactions_per_card_holder AS
	SELECT ch.name, -- card_holder id, card_holder name
		   cc.card,				    -- credit card number
		   t.id, t.date, t.amount,  -- transaction: id, date, amount
		   m.name AS "merchant name",-- merchant name
		   mc.name AS category       -- merchant category
	FROM transaction AS t
	INNER JOIN credit_card AS cc ON cc.card = t.card
	INNER JOIN card_holder AS ch ON ch.id = cc.cardholder_id
	INNER JOIN merchant AS m ON m.id = t.id_merchant
	INNER JOIN merchant_category AS mc ON mc.id = m.id_merchant_category
	ORDER BY ch.name;

-- Count the transactions that are less than $2
CREATE VIEW small_transactions AS 
	SELECT *
	FROM transaction 
	WHERE amount < 2.00;

-- Is there any evidence to suggest that a credit card has been hacked?
CREATE VIEW count_number_of_small_trans AS
	SELECT COUNT(amount)
	FROM transaction 
	WHERE amount < 2.00;

-- There are 350 total transactions for less than $2, which could be the result 
-- of small transactions done by hackers. 

-- What are the top 100 highest transactions made between 7:00 and 9:00?
-- https://www.postgresqltutorial.com/postgresql-date_part/
CREATE VIEW top_morning_trans AS 
	SELECT t.date, t.amount, t.card,
		   mc.name
	FROM transaction AS t
	JOIN merchant AS m ON t.id_merchant = m.id
	JOIN merchant_category AS mc on mc.id = m.id
	WHERE DATE_PART('hour', t.date) >= 7
	AND DATE_PART('hour', t.date) <= 9
	ORDER BY t.amount DESC 
	LIMIT 100;

CREATE VIEW cout_small_morning_trans AS
	SELECT COUNT(amount)
	FROM transaction 
	WHERE DATE_PART('hour', date) >= 7
	AND DATE_PART('hour', date) <= 9
	AND amount < 2.00;

-- What are the top 5 merchants prone to being hacked using small transactions. 
CREATE VIEW top_hacked_merchants AS
SELECT m.name AS "Merchant Name",
	   mc.name AS "Merchant Category",
	   COUNT(t.amount) AS "Small Transactions"
FROM transaction as t
JOIN merchant AS m ON m.id = t.id_merchant
JOIN merchant_category AS mc ON mc.id = id_merchant_category
WHERE t.amount < 2.00
GROUP BY "Merchant Name", "Merchant Category"
ORDER BY "Small Transactions" DESC
LIMIT 5;
